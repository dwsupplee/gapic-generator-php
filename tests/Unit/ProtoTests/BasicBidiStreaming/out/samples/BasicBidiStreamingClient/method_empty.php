<?php
/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * GENERATED CODE WARNING
 * Generated by gapic-generator-php from the file
 * https://github.com/googleapis/googleapis/blob/master/tests/Unit/ProtoTests/BasicBidiStreaming/basic-bidi-streaming.proto
 * Updates to the above are reflected here through a refresh process.
 */
require_once '../../../vendor/autoload.php';

// [START bidi_generated_BasicBidiStreaming_MethodEmpty_sync];
use Testing\BasicBidiStreaming\BasicBidiStreamingClient;
use Testing\BasicBidiStreaming\EmptyRequest;


$basicBidiStreamingClient = new BasicBidiStreamingClient();
try {
    $request = new EmptyRequest();
    // Write all requests to the server, then read all responses until the
    // stream is complete
    $requests = [
        $request,
    ];
    $stream = $basicBidiStreamingClient->methodEmpty();
    $stream->writeAll($requests);
    foreach ($stream->closeWriteAndReadAll() as $element) {
        // doSomethingWith($element);
    }

    // Alternatively:
    // Write requests individually, making read() calls if
    // required. Call closeWrite() once writes are complete, and read the
    // remaining responses from the server.
    $requests = [
        $request,
    ];
    $stream = $basicBidiStreamingClient->methodEmpty();
    foreach ($requests as $request) {
        $stream->write($request);
        // if required, read a single response from the stream
        $element = $stream->read();
        // doSomethingWith($element)
    }

    $stream->closeWrite();
    $element = $stream->read();
    while (!is_null($element)) {
        // doSomethingWith($element)
        $element = $stream->read();
    }

} finally {
    $basicBidiStreamingClient->close();
}

// [END bidi_generated_BasicBidiStreaming_MethodEmpty_sync];
